["", "k1 = 0x10", "k2 = 0x18", "xored_str = 'h_bO}EcDOR+G)uh(jl,vL'", "xored = [ord(c) for c in xored_str]", "m_1 = \n[chr(", "m_1 = ''.join([chr(c^k1) for c in xored])", "m_2 = ''.join([chr(c^k2) for c in xored])", "m1", "m_1", "m_2", "m_1 = ''.join([chr(c^k1) for c in xored[1:len(xored)/2]])", "m_1 = ''.join([chr(c^k1) for c in xored[1:len(xored)//2]])", "m_2 = ''.join([chr(c^k1) for c in xored[len(xored)//2:]])", "m_2 = ''.join([chr(c^k2) for c in xored[len(xored)//2:]])", "m_1 = ''.join([chr(c^k1) for c in xored[:len(xored)//2]])", "m1,m2", "m_1+m_2", "import json", "with open('wr','w') as f:\n    f.write(json.dumps(In))\n    ", "with open('wr','w') as f:\n    f.write(json.dumps(Out))\n    \n    ", "In", "json.dumps(In)", "with open('wr','w') as f:\n    f.write(json.dumps(Out))\n    \n    ", "with open('wr','w') as f:\n    f.write(json.dumps(In))\n    f.write(json.dumps(Out))\n    "]{"9": "xOr_mUsT_B;W9ex8z|<f\\", "10": "pGzWe]{\\WJ3_1mp0rt4nT", "17": "xOr_mUsT_B3_1mp0rt4nT", "21": ["", "k1 = 0x10", "k2 = 0x18", "xored_str = 'h_bO}EcDOR+G)uh(jl,vL'", "xored = [ord(c) for c in xored_str]", "m_1 = \n[chr(", "m_1 = ''.join([chr(c^k1) for c in xored])", "m_2 = ''.join([chr(c^k2) for c in xored])", "m1", "m_1", "m_2", "m_1 = ''.join([chr(c^k1) for c in xored[1:len(xored)/2]])", "m_1 = ''.join([chr(c^k1) for c in xored[1:len(xored)//2]])", "m_2 = ''.join([chr(c^k1) for c in xored[len(xored)//2:]])", "m_2 = ''.join([chr(c^k2) for c in xored[len(xored)//2:]])", "m_1 = ''.join([chr(c^k1) for c in xored[:len(xored)//2]])", "m1,m2", "m_1+m_2", "import json", "with open('wr','w') as f:\n    f.write(json.dumps(In))\n    ", "with open('wr','w') as f:\n    f.write(json.dumps(Out))\n    \n    ", "In", "json.dumps(In)", "with open('wr','w') as f:\n    f.write(json.dumps(Out))\n    \n    ", "with open('wr','w') as f:\n    f.write(json.dumps(In))\n    f.write(json.dumps(Out))\n    "], "22": "[\"\", \"k1 = 0x10\", \"k2 = 0x18\", \"xored_str = 'h_bO}EcDOR+G)uh(jl,vL'\", \"xored = [ord(c) for c in xored_str]\", \"m_1 = \\n[chr(\", \"m_1 = ''.join([chr(c^k1) for c in xored])\", \"m_2 = ''.join([chr(c^k2) for c in xored])\", \"m1\", \"m_1\", \"m_2\", \"m_1 = ''.join([chr(c^k1) for c in xored[1:len(xored)/2]])\", \"m_1 = ''.join([chr(c^k1) for c in xored[1:len(xored)//2]])\", \"m_2 = ''.join([chr(c^k1) for c in xored[len(xored)//2:]])\", \"m_2 = ''.join([chr(c^k2) for c in xored[len(xored)//2:]])\", \"m_1 = ''.join([chr(c^k1) for c in xored[:len(xored)//2]])\", \"m1,m2\", \"m_1+m_2\", \"import json\", \"with open('wr','w') as f:\\n    f.write(json.dumps(In))\\n    \", \"with open('wr','w') as f:\\n    f.write(json.dumps(Out))\\n    \\n    \", \"In\", \"json.dumps(In)\"]"}